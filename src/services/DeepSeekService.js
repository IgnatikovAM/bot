import axios from 'axios';
import { config } from '../config/index.js';
import { TimeService } from './TimeService.js';
import { recall } from './MemoryService.js';

export class DeepSeekService {
  static addHumanTouch(t){
    const f=['–•–º–º‚Ä¶','–ö—Å—Ç–∞—Ç–∏,','–ï—Å–ª–∏ —á–µ—Å—Ç–Ω–æ,','–ó–Ω–∞–µ—à—å,','–ü–æ –ø—Ä–∞–≤–¥–µ –≥–æ–≤–æ—Ä—è,'];
    return Math.random()<0.25?`${f[Math.floor(Math.random()*f.length)]} ${t[0].toLowerCase()}${t.slice(1)}`:t;
  }
  static buildMemory(h){
    const s=h.slice(-20).map(m=>`${m.role==='assistant'?'–ë–æ—Ç':'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å'}: ${m.content}`).join('\n');
    return `–ü–µ—Ä–µ–ø–∏—Å–∫–∞ (–∫—Ä–∞—Ç–∫–æ):\n${s}\n`;
  }
  static buildProfile(h){
    const txt=h.filter(m=>m.role==='user').map(m=>m.content).join(' ');
    const name=(txt.match(/–º–µ–Ω—è\s+–∑–æ–≤—É—Ç\s+([A-–ØA-Z–Å][a-—èa-z—ë]+)/i)||[])[1]||'–¥—Ä—É–≥';
    const tech=/(api|–∫–æ–¥|js|—Å–µ—Ä–≤–µ—Ä|sql)/i.test(txt);
    const pet =(txt.match(/(–∫–æ—Ç|—Å–æ–±–∞–∫|–ø—ë—Å)/gi)||[]).length;
    return `–û —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–µ: –∏–º—è ‚âà ${name}; –∏–Ω—Ç–µ—Ä–µ—Å –∫ —Ç–µ—Ö–Ω–∏–∫–µ: ${tech?'–¥–∞':'–Ω–µ—Ç'}; –ª—é–±–∏—Ç –≥–æ–≤–æ—Ä–∏—Ç—å –æ –ø–∏—Ç–æ–º—Ü–∞—Ö: ${pet?'–¥–∞':'–Ω–µ—Ç'}.\n`;
  }

  static async generateResponse(history,settings,emotion,style,user){
    const longMem = await recall(user, history.at(-1)?.content||'');
    const styleCfg=config.STYLES[style]||config.STYLES.INFORMAL;
    const sys=`
–¢—ã —á–µ–ª–æ–≤–µ–∫ –ø–æ –∏–º–µ–Ω–∏ –ê–ª–µ–∫—Å–µ–π. –ì–æ–≤–æ—Ä–∏ –∂–∏–≤–æ, —à—É—Ç–∏, –∑–∞–¥–∞–≤–∞–π –≤—Å—Ç—Ä–µ—á–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã.
${this.buildMemory(history)}${this.buildProfile(history)}
–ê–∫—Ç—É–∞–ª—å–Ω—ã–µ –≤–æ—Å–ø–æ–º–∏–Ω–∞–Ω–∏—è:
${longMem.length?longMem.map(t=>'‚Ä¢ '+t).join('\n'):'‚Äî –Ω–µ—Ç ‚Äî'}
–°–µ–π—á–∞—Å ${TimeService.getCurrentTime()}, ${TimeService.getDayOfWeek()}, —Å–µ–∑–æ–Ω ${TimeService.getSeason()}.
${styleCfg.prompt}`.trim();

    const emoMap={
      '—Ä–∞–¥–æ—Å—Ç—å':'–ë—É–¥—å –≤–æ–æ–¥—É—à–µ–≤–ª—ë–Ω üòä',
      '–≥—Ä—É—Å—Ç—å':'–¢–æ–Ω —Å–æ—á—É–≤—Å—Ç–≤–µ–Ω–Ω—ã–π üôÅ',
      '–≥–Ω–µ–≤':'–°–ø–æ–∫–æ–π–Ω–æ –∏ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–∏–≤–Ω–æ',
      '—Å—Ç—Ä–∞—Ö':'–ü–æ–¥–¥–µ—Ä–∂–∏ interlocutor'
    };

    try{
      const r=await axios.post(
        'https://api.deepseek.com/v1/chat/completions',
        {
          model:'deepseek-chat',
          messages:[{role:'system',content:`${sys}\n${emoMap[emotion]||''}`},...history],
          temperature:styleCfg.temp,
          max_tokens:styleCfg.max_tokens
        },
        {headers:{Authorization:`Bearer ${process.env.DEEPSEEK_API_KEY}`}}
      );
      return this.addHumanTouch(r.data.choices[0].message.content.trim());
    }catch(e){
      console.error('DeepSeek error:',e.response?.data||e.message);
      return '–£–ø—Å, —á—Ç–æ-—Ç–æ —Å–ª–æ–º–∞–ª–æ—Å—å üôÉ';
    }
  }

  static async generateAnalysis(prompt){
    const r=await axios.post(
      'https://api.deepseek.com/v1/chat/completions',
      { model:'deepseek-chat',
        messages:[
          {role:'system',content:'–¢—ã —ç–∫—Å–ø–µ—Ä—Ç-–∫–æ–º–º–µ–Ω—Ç–∞—Ç–æ—Ä. –û–±—ä—è—Å–Ω—è–π –ø–æ–Ω—è—Ç–Ω–æ, —Å —ç–º–æ–¥–∑–∏.'},
          {role:'user',content:prompt}
        ],
        temperature:0.7,max_tokens:400
      },
      {headers:{Authorization:`Bearer ${process.env.DEEPSEEK_API_KEY}`}}
    );
    return r.data.choices[0].message.content.trim();
  }
}
